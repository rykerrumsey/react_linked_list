{"ast":null,"code":"import _createClass from \"/home/rykerrumsey/Projects/evolveu/repositories/evolveu_exercises/linked_list/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/rykerrumsey/Projects/evolveu/repositories/evolveu_exercises/linked_list/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nexport var Node = function Node(subject, amount) {\n  _classCallCheck(this, Node);\n\n  this.subject = subject;\n  this.amount = amount;\n  this.next = null;\n  this.prev = null;\n};\nexport var LinkedList =\n/*#__PURE__*/\nfunction () {\n  function LinkedList(subject, amount) {\n    _classCallCheck(this, LinkedList);\n\n    this.head = new Node(subject, amount);\n    this.length = 1;\n    this.tail = this.head;\n  } // add an element to the end of the linked list\n\n\n  _createClass(LinkedList, [{\n    key: \"add\",\n    value: function add(subject, amount) {\n      var node = new Node(subject, amount);\n\n      if (!this.head) {\n        this.head = node;\n        this.tail = this.head;\n      } else {\n        this.tail.next = node;\n        node.prev = this.tail;\n        this.tail = node;\n      }\n\n      this.length += 1;\n      return node;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(node) {\n      if (node === null) return false;\n      var previousNode = node.prev;\n      var nextNode = node.next;\n      previousNode.next = nextNode;\n      this.length--;\n      return true;\n    }\n  }, {\n    key: \"insert\",\n    value: function insert(node, subject, amount) {\n      if (node.next === null) return false;\n      var insertedNode = new Node(subject, amount);\n      var tail = node.next;\n      insertedNode.next = tail;\n      insertedNode.prev = node;\n      console.log(\"this is the prev node: \" + insertedNode.prev);\n      node.next = insertedNode;\n      this.length++;\n      return true;\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      return this.tail;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head;\n    }\n  }, {\n    key: \"next\",\n    value: function next(node) {\n      if (node.next === null) return this.head;\n      return node.next;\n    }\n  }, {\n    key: \"prev\",\n    value: function prev(node) {\n      if (node.prev === null) return this.tail;\n      return node.prev;\n    }\n  }]);\n\n  return LinkedList;\n}();","map":{"version":3,"sources":["/home/rykerrumsey/Projects/evolveu/repositories/evolveu_exercises/linked_list/src/components/LinkedList.js"],"names":["Node","subject","amount","next","prev","LinkedList","head","length","tail","node","previousNode","nextNode","insertedNode","console","log"],"mappings":";;AAAA,WAAaA,IAAb,GACI,cAAYC,OAAZ,EAAqBC,MAArB,EAA6B;AAAA;;AACzB,OAAKD,OAAL,GAAeA,OAAf;AACA,OAAKC,MAAL,GAAcA,MAAd;AACA,OAAKC,IAAL,GAAY,IAAZ;AACA,OAAKC,IAAL,GAAY,IAAZ;AACH,CANL;AASA,WAAaC,UAAb;AAAA;AAAA;AACI,sBAAYJ,OAAZ,EAAqBC,MAArB,EAA6B;AAAA;;AACzB,SAAKI,IAAL,GAAY,IAAIN,IAAJ,CAASC,OAAT,EAAkBC,MAAlB,CAAZ;AACA,SAAKK,MAAL,GAAc,CAAd;AACA,SAAKC,IAAL,GAAY,KAAKF,IAAjB;AACH,GALL,CAOI;;;AAPJ;AAAA;AAAA,wBAQQL,OARR,EAQiBC,MARjB,EAQyB;AACjB,UAAMO,IAAI,GAAG,IAAIT,IAAJ,CAASC,OAAT,EAAkBC,MAAlB,CAAb;;AAEA,UAAI,CAAC,KAAKI,IAAV,EAAgB;AACd,aAAKA,IAAL,GAAYG,IAAZ;AACA,aAAKD,IAAL,GAAY,KAAKF,IAAjB;AACD,OAHD,MAGO;AACH,aAAKE,IAAL,CAAUL,IAAV,GAAiBM,IAAjB;AACAA,QAAAA,IAAI,CAACL,IAAL,GAAY,KAAKI,IAAjB;AACA,aAAKA,IAAL,GAAYC,IAAZ;AACH;;AACD,WAAKF,MAAL,IAAe,CAAf;AAEA,aAAOE,IAAP;AACH;AAtBL;AAAA;AAAA,4BAwBWA,IAxBX,EAwBiB;AACV,UAAGA,IAAI,KAAK,IAAZ,EAAkB,OAAO,KAAP;AAClB,UAAIC,YAAY,GAAGD,IAAI,CAACL,IAAxB;AACA,UAAIO,QAAQ,GAAGF,IAAI,CAACN,IAApB;AAEAO,MAAAA,YAAY,CAACP,IAAb,GAAoBQ,QAApB;AACA,WAAKJ,MAAL;AAEA,aAAO,IAAP;AACF;AAjCL;AAAA;AAAA,2BAmCWE,IAnCX,EAmCiBR,OAnCjB,EAmC0BC,MAnC1B,EAmCkC;AAC1B,UAAGO,IAAI,CAACN,IAAL,KAAc,IAAjB,EAAuB,OAAO,KAAP;AAEvB,UAAMS,YAAY,GAAG,IAAIZ,IAAJ,CAASC,OAAT,EAAkBC,MAAlB,CAArB;AACA,UAAMM,IAAI,GAAGC,IAAI,CAACN,IAAlB;AAEAS,MAAAA,YAAY,CAACT,IAAb,GAAoBK,IAApB;AACAI,MAAAA,YAAY,CAACR,IAAb,GAAoBK,IAApB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BF,YAAY,CAACR,IAArD;AACAK,MAAAA,IAAI,CAACN,IAAL,GAAYS,YAAZ;AACA,WAAKL,MAAL;AAEA,aAAO,IAAP;AACH;AAhDL;AAAA;AAAA,2BAkDW;AACH,aAAO,KAAKC,IAAZ;AACH;AApDL;AAAA;AAAA,4BAsDY;AACJ,aAAO,KAAKF,IAAZ;AACH;AAxDL;AAAA;AAAA,yBA0DSG,IA1DT,EA0De;AACP,UAAGA,IAAI,CAACN,IAAL,KAAc,IAAjB,EAAuB,OAAO,KAAKG,IAAZ;AACvB,aAAOG,IAAI,CAACN,IAAZ;AACH;AA7DL;AAAA;AAAA,yBA+DSM,IA/DT,EA+De;AACP,UAAGA,IAAI,CAACL,IAAL,KAAc,IAAjB,EAAuB,OAAO,KAAKI,IAAZ;AACvB,aAAOC,IAAI,CAACL,IAAZ;AACH;AAlEL;;AAAA;AAAA","sourcesContent":["export class Node {\n    constructor(subject, amount) {\n        this.subject = subject;\n        this.amount = amount;\n        this.next = null;\n        this.prev = null;\n    }\n}\n\nexport class LinkedList {\n    constructor(subject, amount) {\n        this.head = new Node(subject, amount)\n        this.length = 1;\n        this.tail = this.head;\n    }\n\n    // add an element to the end of the linked list\n    add(subject, amount) {\n        const node = new Node(subject, amount);\n\n        if (!this.head) {\n          this.head = node;\n          this.tail = this.head;\n        } else {\n            this.tail.next = node;\n            node.prev = this.tail\n            this.tail = node;\n        }\n        this.length += 1;\n\n        return node\n    }\n\n    delete(node) {\n       if(node === null) return false\n       let previousNode = node.prev\n       let nextNode = node.next\n\n       previousNode.next = nextNode\n       this.length--\n\n       return true\n    }\n\n    insert(node, subject, amount) {\n        if(node.next === null) return false\n\n        const insertedNode = new Node(subject, amount)\n        const tail = node.next\n\n        insertedNode.next = tail\n        insertedNode.prev = node\n        console.log(\"this is the prev node: \" + insertedNode.prev)\n        node.next = insertedNode\n        this.length++;\n\n        return true\n    }\n\n    last() {\n        return this.tail\n    }\n\n    first() {\n        return this.head\n    }\n\n    next(node) {\n        if(node.next === null) return this.head\n        return node.next \n    }\n\n    prev(node) {\n        if(node.prev === null) return this.tail\n        return node.prev\n    }\n}\n"]},"metadata":{},"sourceType":"module"}