{"ast":null,"code":"import _createClass from \"/home/rykerrumsey/Projects/evolveu/repositories/evolveu_exercises/linked_list/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/rykerrumsey/Projects/evolveu/repositories/evolveu_exercises/linked_list/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nexport var Node = function Node(subject, amount) {\n  _classCallCheck(this, Node);\n\n  this.subject = subject;\n  this.amount = amount;\n  this.next = null;\n};\nexport var LinkedList =\n/*#__PURE__*/\nfunction () {\n  function LinkedList(subject, amount) {\n    _classCallCheck(this, LinkedList);\n\n    this.head = new Node(subject, amount);\n    this.showString = this.head.subject + \" : \" + this.head.amount;\n    this.length = 0;\n    this.tail = this.head;\n  }\n\n  _createClass(LinkedList, [{\n    key: \"show\",\n    value: function show() {\n      return this.showString;\n    } // push an element to the end of the linked list\n\n  }, {\n    key: \"push\",\n    value: function push(subject, amount) {\n      var node = new Node(subject, amount);\n\n      if (!this.head) {\n        this.head = node;\n        this.tail = this.head;\n      } else {\n        this.tail.next = node;\n        this.tail = node;\n      }\n\n      this.showString += ', ' + node.subject + \" : \" + node.amount;\n      this.length = this.length + 1;\n    } // pop an element off of the end of the linked list\n\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      if (!this.head) return undefined;\n      var current = this.head;\n      var newTail = current;\n\n      while (current.next) {\n        newTail = current;\n        current = current.next;\n      }\n\n      this.tail = newTail;\n      this.tail.next = null;\n      this.length--;\n\n      if (this.length === 0) {\n        this.head = null;\n        this.tail = null;\n      }\n\n      return current;\n    } // remove a node from the beginning of the linked list\n\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (!this.head) return undefined;\n      var currentHead = this.head;\n      this.head = currentHead.next;\n      this.length--;\n\n      if (this.length === 0) {\n        this.tail = null;\n      }\n\n      return currentHead;\n    } // add a node to the beginning of the linked list\n\n  }, {\n    key: \"unshift\",\n    value: function unshift(subject, amount) {\n      var newNode = new Node(subject, amount);\n\n      if (!this.head) {\n        this.head = newNode;\n        this.tail = this.head;\n      }\n\n      newNode.next = this.head;\n      this.head = newNode;\n      this.length++;\n      return this;\n    } // get values from an element at designated index\n\n  }, {\n    key: \"get\",\n    value: function get(index) {\n      if (index < 0 || index >= this.length) return null;\n      var counter = 0;\n      var current = this.head;\n\n      while (counter !== index) {\n        current = current.next;\n        counter++;\n      }\n\n      return current;\n    } // set values for an element at designated index\n\n  }, {\n    key: \"set\",\n    value: function set(index, subject, amount) {\n      var foundNode = this.get(index);\n\n      if (foundNode) {\n        foundNode.subject = subject;\n        foundNode.amount = amount;\n        return true;\n      }\n\n      return false;\n    } // insert element at specific index\n\n  }, {\n    key: \"insert\",\n    value: function insert(index, subject, amount) {\n      if (index < 0 || index > this.length) return false;\n      if (index === this.length) return !!this.push(subject, amount);\n      if (index === 0) return !!this.unshift(subject, amount);\n      var newNode = new Node(subject, amount);\n      var prev = this.get(index - 1);\n      var temp = prev.next;\n      prev.next = newNode;\n      newNode.next = temp;\n      this.length++;\n      return true;\n    } // delete a node at a given index\n\n  }, {\n    key: \"delete\",\n    value: function _delete(index) {\n      if (index < 0 || index >= this.length) return undefined;\n      if (index === 0) return this.shift();\n      if (index === this.length - 1) return this.pop();\n      var previousNode = this.get(index - 1);\n      var removed = previousNode.next;\n      previousNode.next = removed.next;\n      this.length--;\n      return removed;\n    }\n  }]);\n\n  return LinkedList;\n}();","map":{"version":3,"sources":["/home/rykerrumsey/Projects/evolveu/repositories/evolveu_exercises/linked_list/src/components/LinkedList.js"],"names":["Node","subject","amount","next","LinkedList","head","showString","length","tail","node","undefined","current","newTail","currentHead","newNode","index","counter","foundNode","get","push","unshift","prev","temp","shift","pop","previousNode","removed"],"mappings":"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","sourcesContent":["export class Node {\n    constructor(subject, amount) {\n        this.subject = subject;\n        this.amount = amount;\n        this.next = null;\n    }\n}\n\nexport class LinkedList {\n    constructor(subject, amount) {\n        this.head = new Node(subject, amount)\n        this.showString = this.head.subject + \" : \" + this.head.amount;\n        this.length = 0;\n        this.tail = this.head;\n    }\n\n    show() {\n        return this.showString;\n    }\n\n    // push an element to the end of the linked list\n    push(subject, amount) {\n        const node = new Node(subject, amount);\n\n        if (!this.head) {\n          this.head = node;\n          this.tail = this.head;\n        } else {\n            this.tail.next = node;\n            this.tail = node;\n        }\n        this.showString += ', ' + node.subject + \" : \" + node.amount;\n        this.length = this.length + 1;\n      }\n\n    // pop an element off of the end of the linked list\n    pop() {\n        if(!this.head) return undefined;\n            let current = this.head;\n            let newTail = current;\n            while(current.next){\n                newTail = current;\n                current = current.next;\n            }\n            this.tail = newTail;\n            this.tail.next = null;\n            this.length--;\n            if(this.length === 0){\n                this.head = null;\n                this.tail = null;\n            }\n            return current;\n    }\n\n    // remove a node from the beginning of the linked list\n    shift() {\n        if(!this.head) return undefined;\n            let currentHead = this.head;\n            this.head = currentHead.next;\n            this.length--;\n            if(this.length === 0){\n                this.tail = null;\n            }\n            return currentHead;\n    }\n\n    // add a node to the beginning of the linked list\n    unshift(subject, amount) {\n        let newNode = new Node(subject, amount);\n            if(!this.head) {\n                this.head = newNode;\n                this.tail = this.head;\n            }\n            newNode.next = this.head;\n            this.head = newNode;\n            this.length++;\n            return this;\n    }\n\n    // get values from an element at designated index\n    get(index) {\n        if(index < 0 || index >= this.length) return null;\n            let counter = 0;\n            let current = this.head;\n            while(counter !== index){\n                current = current.next;\n                counter++;\n            }\n            return current;\n    }\n\n    // set values for an element at designated index\n    set(index, subject, amount) {\n        let foundNode = this.get(index);\n            if(foundNode){\n                foundNode.subject = subject;\n                foundNode.amount = amount;\n                return true;\n            }\n            return false;\n    }\n\n    // insert element at specific index\n    insert(index, subject, amount) {\n        if(index < 0 || index > this.length) return false;\n        if(index === this.length) return !!this.push(subject, amount)\n        if(index === 0) return !!this.unshift(subject, amount)\n\n        let newNode = new Node(subject, amount)\n        let prev = this.get(index - 1)\n        let temp = prev.next\n\n        prev.next = newNode\n        newNode.next = temp;\n        this.length++;\n\n        return true;\n    }\n\n    // delete a node at a given index\n    delete(index) {\n        if(index < 0 || index >= this.length) return undefined;\n        if(index === 0) return this.shift();\n        if(index === this.length - 1) return this.pop();\n\n        let previousNode = this.get(index - 1);\n        let removed = previousNode.next;\n\n        previousNode.next = removed.next;\n        this.length--;\n\n        return removed;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}