{"ast":null,"code":"import _createClass from \"/home/rykerrumsey/Projects/evolveu/repositories/evolveu_exercises/linked_list/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/rykerrumsey/Projects/evolveu/repositories/evolveu_exercises/linked_list/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nexport var Node = function Node(subject, amount) {\n  _classCallCheck(this, Node);\n\n  this.subject = subject;\n  this.amount = amount;\n  this.forwardNode = null;\n};\nexport var LinkedList =\n/*#__PURE__*/\nfunction () {\n  function LinkedList(subject, amount) {\n    _classCallCheck(this, LinkedList);\n\n    this.head = new Node(subject, amount);\n    this.showString = this.head.subject + \" : \" + this.head.amount;\n    this.length = 1;\n    this.tail = this.head;\n  }\n\n  _createClass(LinkedList, [{\n    key: \"show\",\n    value: function show() {\n      return this.showString;\n    } // push an element to the end of the linked list\n\n  }, {\n    key: \"push\",\n    value: function push(subject, amount) {\n      var node = new Node(subject, amount);\n\n      if (!this.head) {\n        this.head = node;\n        this.tail = this.head;\n      } else {\n        this.tail.forwardNode = node;\n        this.tail = node;\n      }\n\n      this.showString += ', ' + node.subject + \" : \" + node.amount;\n      this.length = this.length + 1;\n    } // pop an element off of the end of the linked list\n\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      if (!this.head) return undefined;\n      var current = this.head;\n      var newTail = current;\n\n      while (current.next) {\n        newTail = current;\n        current = current.next;\n      }\n\n      this.tail = newTail;\n      this.tail.next = null;\n      this.length--;\n\n      if (this.length === 0) {\n        this.head = null;\n        this.tail = null;\n      }\n\n      return current;\n    } // remove a node from the beginning of the linked list\n\n  }, {\n    key: \"shift\",\n    value: function shift() {} // add a node to the beginning of the linked list\n\n  }, {\n    key: \"unshift\",\n    value: function unshift() {} // get values from an element at designated index\n\n  }, {\n    key: \"get\",\n    value: function get() {} // set values for an element at designated index\n\n  }, {\n    key: \"set\",\n    value: function set() {} // insert element at specific index\n\n  }, {\n    key: \"insert\",\n    value: function insert(index, subject, amount) {\n      if (index < 0 || index > this.length) return false;\n      if (index === this.length) return !!this.push(subject, amount);\n      if (index === 0) return !!this.unshift(subject, amount);\n      var newNode = new Node(subject, amount);\n      var prev = this.get(index - 1);\n      var temp = prev.next;\n      prev.forwardNode = newNode;\n      newNode.next = temp;\n      this.length++;\n      return true;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {}\n  }]);\n\n  return LinkedList;\n}();","map":{"version":3,"sources":["/home/rykerrumsey/Projects/evolveu/repositories/evolveu_exercises/linked_list/src/components/LinkedList.js"],"names":["Node","subject","amount","forwardNode","LinkedList","head","showString","length","tail","node","undefined","current","newTail","next","index","push","unshift","newNode","prev","get","temp"],"mappings":"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","sourcesContent":["export class Node {\n    constructor(subject, amount) {\n        this.subject = subject;\n        this.amount = amount;\n        this.forwardNode = null;\n    }\n}\n\nexport class LinkedList {\n    constructor(subject, amount) {\n        this.head = new Node(subject, amount)\n        this.showString = this.head.subject + \" : \" + this.head.amount;\n        this.length = 1;\n        this.tail = this.head;\n    }\n\n    show() {\n        return this.showString;\n    }\n\n    // push an element to the end of the linked list\n    push(subject, amount) {\n        const node = new Node(subject, amount);\n\n        if (!this.head) {\n          this.head = node;\n          this.tail = this.head;\n        } else {\n            this.tail.forwardNode = node;\n            this.tail = node;\n        }\n        this.showString += ', ' + node.subject + \" : \" + node.amount;\n        this.length = this.length + 1;\n      }\n\n    // pop an element off of the end of the linked list\n    pop() {\n        if(!this.head) return undefined;\n            var current = this.head;\n            var newTail = current;\n            while(current.next){\n                newTail = current;\n                current = current.next;\n            }\n            this.tail = newTail;\n            this.tail.next = null;\n            this.length--;\n            if(this.length === 0){\n                this.head = null;\n                this.tail = null;\n            }\n            return current;\n    }\n\n    // remove a node from the beginning of the linked list\n    shift() {\n    \n    }\n\n    // add a node to the beginning of the linked list\n    unshift() {\n    \n    }\n\n    // get values from an element at designated index\n    get() {\n    \n    }\n\n    // set values for an element at designated index\n    set() {\n    \n    }\n\n    // insert element at specific index\n    insert(index, subject, amount) {\n        if(index < 0 || index > this.length) return false;\n        if(index === this.length) return !!this.push(subject, amount)\n        if(index === 0) return !!this.unshift(subject, amount)\n\n        let newNode = new Node(subject, amount)\n        let prev = this.get(index - 1)\n        let temp = prev.next\n        prev.forwardNode = newNode\n        newNode.next = temp;\n        this.length++;\n        return true;\n    }\n\n    delete() {\n    }\n}\n"]},"metadata":{},"sourceType":"module"}