{"version":3,"sources":["components/LinkedList.js","components/linkedlistcomp.js","App.js","index.js"],"names":["Node","subject","amount","Object","classCallCheck","this","next","prev","LinkedList","head","length","tail","createClass","key","value","node","previousNode","nextNode","insertedNode","LinkedListComp","_React$Component","_this","possibleConstructorReturn","getPrototypeOf","call","new","ll","state","currentNode","setState","formatNodeToString","clearInputs","delete","console","error","concat","first","last","insert","add","newNode","document","getElementById","onSubjectChange","e","target","onAmountChange","inherits","_this2","react_default","a","createElement","id","onClick","className","type","placeholder","onChange","Display","React","Component","props","App","linkedlistcomp_LinkedListComp","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.5f331dee.chunk.js","sourcesContent":["export class Node {\n    constructor(subject, amount) {\n        this.subject = subject;\n        this.amount = amount;\n        this.next = null;\n        this.prev = null;\n    }\n}\n\nexport class LinkedList {\n    constructor(subject, amount) {\n        this.head = new Node(subject, amount)\n        this.length = 1;\n        this.tail = this.head;\n    }\n\n    // add an element to the end of the linked list\n    add(subject, amount) {\n        const node = new Node(subject, amount);\n\n        if (!this.head) {\n          this.head = node;\n          this.tail = this.head;\n        } else {\n            this.tail.next = node;\n            node.prev = this.tail\n            this.tail = node;\n        }\n        this.length += 1;\n\n        return node\n    }\n\n    delete(node) {\n       if(node === null) return false\n       let previousNode = node.prev\n       let nextNode = node.next\n\n       previousNode.next = nextNode\n       nextNode.prev = previousNode\n       this.length--\n\n       return true\n    }\n\n    insert(node, subject, amount) {\n        if(node.next === null) return false\n\n        const insertedNode = new Node(subject, amount)\n        const tail = node.next\n\n        tail.prev = insertedNode\n        insertedNode.next = tail\n        insertedNode.prev = node\n        node.next = insertedNode\n        this.length++;\n\n        return true\n    }\n\n    last() {\n        return this.tail\n    }\n\n    first() {\n        return this.head\n    }\n\n    next(node) {\n        if(node.next === null) return this.head\n        return node.next \n    }\n\n    prev(node) {\n        if(node.prev === null) return this.tail\n        return node.prev\n    }\n}\n","import React from 'react'\nimport { LinkedList } from './LinkedList'\n\nexport class LinkedListComp extends React.Component {\n    constructor() {\n        super();\n        this.ll = null\n        this.currentNode = null\n        this.state = {\n            subject: \"\",\n            amount: \"\",\n            node: \"null\"\n        }\n    }\n\n    new = () => {\n        this.ll = new LinkedList(this.state.subject, this.state.amount)\n        this.currentNode = this.ll.head\n        this.setState({\n            subject: \"\",\n            amount: \"\",\n            node: this.formatNodeToString(this.currentNode)\n        })\n        this.clearInputs();\n    }\n\n    delete = () => {\n        const nextNode = this.currentNode.next\n       const success = this.ll.delete(this.currentNode)\n       if(success) {\n           this.currentNode = nextNode\n           this.setState({\n                subject: \"\",\n                amount: \"\",\n                node: this.formatNodeToString(this.currentNode)\n           })\n       } else {\n            console.error(\"ERROR could not delete node\")\n       }\n       this.clearInputs()\n    }\n\n    formatNodeToString = (node) => {\n        return `subject=${node.subject}, amount=${node.amount}`\n    }\n\n    first = () => {\n        this.currentNode = this.ll.first()\n        this.setState({\n            node: this.formatNodeToString(this.currentNode)\n        })\n    }\n\n    last = () => {\n        this.currentNode = this.ll.last()\n        this.setState({\n            node: this.formatNodeToString(this.currentNode)\n        })\n    }\n\n    next = () => {\n        this.currentNode = this.ll.next(this.currentNode)\n        this.setState({\n            node: this.formatNodeToString(this.currentNode) \n        })\n    }\n\n    prev = () => {\n        this.currentNode = this.ll.prev(this.currentNode)\n        this.setState({\n            node: this.formatNodeToString(this.currentNode)\n        })\n    }\n\n    insert = () => {\n        const success = this.ll.insert(this.currentNode, this.state.subject, this.state.amount)\n        if(success) {\n            this.currentNode = this.currentNode.next\n           this.setState({\n                subject: \"\",\n                amount: \"\",\n                node: this.formatNodeToString(this.currentNode) \n           })\n        } else {\n            console.error(\"ERROR could not insert node\")\n        }\n       this.clearInputs();\n    }\n\n    add = () => {\n        let newNode = this.ll.add(this.state.subject, this.state.amount)\n        this.setState({\n            subject: \"\",\n            amount: \"\",\n            node: this.formatNodeToString(newNode) \n        })\n        this.clearInputs();\n    }\n\n    clearInputs = () => {\n        document.getElementById(\"newSubject\").value = ''\n        document.getElementById(\"newAmount\").value = ''\n    }\n\n    onSubjectChange = (e) => {\n        this.setState({\n            subject: e.target.value\n        })\n    }\n\n    onAmountChange = (e) => {\n        this.setState({\n            amount: e.target.value\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                <button id=\"new\" onClick={this.new}>New</button>\n                <button id=\"add\" onClick={this.add}>Add</button>\n                <button id=\"add\" onClick={this.insert}>Insert</button>\n                <button id=\"add\" onClick={this.delete}>Delete</button>\n                <br />\n                <input id=\"newSubject\" className=\"inputs\" type='text' placeholder=\"Subject\" onChange={(e) => this.onSubjectChange(e)} />\n                <input id=\"newAmount\" className=\"inputs\" type='text' placeholder=\"Amount\" onChange={(e) => this.onAmountChange(e)}/>\n                <br />\n                <Display node={this.state.node}/>\n                <button id=\"first\" onClick={this.first}>First</button>\n                <button id=\"prev\" onClick={this.prev}>Prev</button>\n                <button id=\"next\" onClick={this.next}>Next</button>\n                <button id=\"last\" onClick={this.last}>Last</button>\n            </div>\n        )\n    }\n}\n\nfunction Display(props) {\n    return (\n        <div className=\"display\">\n            <div className=\"display-inner display-node\">{props.node}</div>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { LinkedListComp } from './components/linkedlistcomp'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <header className=\"App-header\">\n              <h1> Linked List </h1> \n              <LinkedListComp />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}